@using YomLog.Domain.Books.DTOs
@using YomLog.MobileApp.Services.Api
@using YomLog.BlazorShared.Services.Popup

@inject IDialogService DialogService
@inject IPopupService PopupService
@inject ProgressApiService ApiService

<MudListItem OnClick="() => _menu.SetDrawerOpened(true)">
    <div class="d-flex justify-space-between align-center">
        <div>
            <div class="mb-1">
                <MudText Typo="Typo.caption">@Item.CreatedOn.FormatDateTime()</MudText>
            </div>

            <div class="d-flex align-end mb-1 gap-1">
                <MudText Typo="Typo.h6">@Item.Position.Page / @Book.Total.Page</MudText>
                <MudText Typo="Typo.body2" Class="mb-1">ページ</MudText>
            </div>

            <div class="d-flex">
                <MudText Typo="Typo.body2" Color="Color.Primary">
                    @($"{Item.Diff!.Page:+#;-#;+0;}") ページ
                    (@($"{(Item.Diff!.Percentage ?? 0):+#0.00%;-#0.00%;+0.00%}"))
                </MudText>
            </div>
        </div>

        <MudProgressCircular Color="Color.Secondary"
                             Value="(Item.Position.Percentage ?? 0) * 100" />
    </div>
</MudListItem>

<MudDivider />

<BottomMenu @ref="_menu">
    <BottomMenuItem Icon="@Icons.Material.Filled.Edit" OnClick="EditMenuClicked">
        記録を編集
    </BottomMenuItem>
    <BottomMenuItem Icon="@Icons.Material.Filled.Delete" OnClick="DeleteMenuClicked">
        記録を削除
    </BottomMenuItem>
</BottomMenu>

@code {
    [Parameter, EditorRequired] public ProgressDetailsDTO Item { get; set; } = null!;
    [Parameter, EditorRequired] public BookDetailsDTO Book { get; set; } = null!;
    [Parameter, EditorRequired] public EventCallback OnReloadData { get; set; }

    private BottomMenu _menu = null!;

    private async Task EditMenuClicked()
    {
        var dialog = await ProgressEditDialog.ShowDialog(DialogService, Item, Book);
        if (dialog.Data is bool ans && ans) await OnReloadData.InvokeAsync();
    }

    private async Task DeleteMenuClicked()
    {
        bool confirm = await PopupService.ShowConfirm("確認", "この記録を削除しますか？");
        if (!confirm) return;

        await ApiService.DeleteAsync(Item);
        await OnReloadData.InvokeAsync();
    }
}