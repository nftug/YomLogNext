@inject AppSettings AppSettings
@inject LayoutService LayoutService
@inject ScrollInfoService ScrollInfoService
@inherits BindableComponentBase

@if (AppSettings.IsNativeApp)
{
    <MudText Typo="Typo.h6"
             Class="mud-width-full"
             Style=@($"cursor: pointer; {TextAlign}")
             @onclick="ScrollInfoService.ScrollToTopAsync">
        @(Title ?? LayoutService.Page.Value?.Title ?? AppSettings.AppName)
    </MudText>
}
else
{
    <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
        <MudText Typo="Typo.h6" Class="mud-width-full" Style="cursor: pointer;">
            @(Title ?? LayoutService.Page.Value?.Title ?? AppSettings.AppName)
        </MudText>
    </MudHidden>
    <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
        <MudText Typo="Typo.h6" Class="mud-width-full" Style="cursor: pointer;">
            @AppSettings.AppName
        </MudText>
    </MudHidden>
}

@code {
    [Parameter] public bool AlignCenter { get; set; }
    [Parameter] public string? Title { get; set; }

    private string TextAlign => $"text-align: {(AlignCenter ? "center" : "left")};";

    protected override void OnInitialized()
    {
        LayoutService.Page.Skip(1).Subscribe(_ => Rerender()).AddTo(Disposable);
    }
}