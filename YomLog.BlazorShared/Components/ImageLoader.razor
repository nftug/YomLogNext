@using YomLog.BlazorShared.Services.Popup
@inherits BindableComponentBase
@inject IPopupService PopupService

<div class="d-flex justify-center mt-5">
    <InputFile id="fileInput" OnChange="OnSelectImage" hidden accept="@ContentType" />

    @if (IsLoading.Value)
    {
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="200px" />
    }
    else if (_imageSrc != null)
    {
        <MudBadge Icon="@Icons.Material.Filled.Close" Color="Color.Error" Overlap="true"
              Class="mx-6 my-4" BadgeClass="cursor-pointer" OnClick="OnDeleteImage">
            <MudImage Src="@_imageSrc" Width="200" Height="200"
                  ObjectFit="ObjectFit.Contain" Class="rounded-sm cursor-pointer"
                  @onclick="() => PopupService.ShowImagePopup(_imageSrc)" />
        </MudBadge>
    }
    else
    {
        <label for="fileInput" class="cursor-pointer">
            <MudPaper Width="200px" Height="200px" Elevation="0" Class="d-flex justify-center align-center">
                <MudIcon Icon="@Icons.Material.Filled.AddAPhoto" Size="Size.Large" />
            </MudPaper>
        </label>
    }
</div>

@if (PictureId == default && _pictureIdOrigin != default)
{
    <MudButton Color="Color.Primary" FullWidth="true" StartIcon="@Icons.Material.Filled.Refresh" OnClick="OnResetImage">
        Reset picture
    </MudButton>
}